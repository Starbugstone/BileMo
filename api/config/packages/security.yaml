security:
    encoders:
        App\Entity\Client:
            algorithm: sodium

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Client
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /client_login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnabledChecker

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/client_login, roles: IS_AUTHENTICATED_ANONYMOUSLY } # the dev login form helper
         - { path: ^/activate_client/, roles: IS_AUTHENTICATED_ANONYMOUSLY } # activate the client with token and set password
         - { path: ^/reset_client_password/, roles: IS_AUTHENTICATED_ANONYMOUSLY } # the client wishes to reset his password
         - { path: ^/forgot_password, roles: IS_AUTHENTICATED_ANONYMOUSLY } # the client forgot his password
         - { path: ^/docs,         roles: IS_AUTHENTICATED_ANONYMOUSLY } # access the documentation
         - { path: ^/,             roles: IS_AUTHENTICATED_FULLY } # everything else
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
